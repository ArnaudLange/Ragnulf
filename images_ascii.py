
class AffichageMoves():

    def img_B(self):
        return "\
                    __________ \n\
                   |          |\n\
                   |          |\n\
                  \/          |\n\
             ___ ___ ____     |\n\
            /___/___/___/|    |\n\
           /___/___/___/||____|\n\
          /___/___/__ /|/|     \n\
         |   |   |   | /||     \n\
         |___|___|___|/|/|     \n\
         |   |   |   | /||     \n\
         |___|___|___|/|/      \n\
         |   |   |   | /       \n\
         |___|___|___|/        \n\
                               \n\
                               \n\
                               \n\
                               \n"

    def img_B2(self):
        return "\
                    __________ \n\
                   |          |\n\
                   |     x2   |\n\
                  \/          |\n\
             ___ ___ ____     |\n\
            /___/___/___/|    |\n\
           /___/___/___/||____|\n\
          /___/___/__ /|/|     \n\
         |   |   |   | /||     \n\
         |___|___|___|/|/|     \n\
         |   |   |   | /||     \n\
         |___|___|___|/|/      \n\
         |   |   |   | /       \n\
         |___|___|___|/        \n\
                               \n\
                               \n\
                               \n\
                               \n"

    def img_Bi(self):
        return "\
                    __________  \n\
                   |          | \n\
                   |          | \n\
                   |          | \n\
             ___ __|_ ___     \/\n\
            /___/___/___/|      \n\
           /___/___/___/||____  \n\
          /___/___/__ /|/|      \n\
         |   |   |   | /||      \n\
         |___|___|___|/|/|      \n\
         |   |   |   | /||      \n\
         |___|___|___|/|/       \n\
         |   |   |   | /        \n\
         |___|___|___|/         \n\
                                \n\
                                \n\
                                \n\
                                \n"

        return imgStr

    def img_F(self):
        return "\
                            \n\
                            \n\
                            \n\
                            \n\
             ___ ___ ____   \n\
            /___/___/___/|  \n\
           /___/___/___/||  \n\
          /___/___/__ /|/|  \n\
         |   |   |   | /||  \n\
         |___|___|___|/|/|  \n\
      ___|___|__ |   | /||  \n\
     |   |___|__||___|/|/   \n\
     |   |   |  ||   | /    \n\
     |   |___|__||___|/     \n\
     |          |           \n\
     |          \/          \n\
     |__________            \n\
                            \n"

    def img_F2(self):
        return "\
                            \n\
                            \n\
                            \n\
                            \n\
             ___ ___ ____   \n\
            /___/___/___/|  \n\
           /___/___/___/||  \n\
          /___/___/__ /|/|  \n\
         |   |   |   | /||  \n\
         |___|___|___|/|/|  \n\
      ___|___|__ |   | /||  \n\
     |   |___|__||___|/|/   \n\
     |   |   |  ||   | /    \n\
     |   |___|__||___|/     \n\
     |          |           \n\
     |    x2    \/          \n\
     |__________            \n\
                            \n"

    def img_Fi(self):
        return "\
                          \n\
                          \n\
                          \n\
                          \n\
             ___ ___ ____ \n\
            /___/___/___/|\n\
           /___/___/___/||\n\
          /___/___/__ /|/|\n\
         |   |   |   | /||\n\
         |___|___|___|/|/|\n\
      ___|___|__ |   | /||\n\
     |   |___|__||___|/|/ \n\
     |   |   |  ||   | /  \n\
     |   |___|__||___|/   \n\
     |          |         \n\
     \/         |         \n\
      __________|         \n\
                          \n"

    def img_L(self):
        return "\
                          \n\
                          \n\
                          \n\
                          \n\
             ___ ___ ____ \n\
      /|    /___/___/___/|\n\
     / |   /___/___/___/||\n\
    /  |  /___/___/__ /|/|\n\
   |   | |   |   |   | /||\n\
   |   | |___|___|___|/|/|\n\
   \/  | |   |   |   | /||\n\
      /  |___|___|___|/|/ \n\
     /   |   |   |   | /  \n\
    /    |___|___|___|/   \n\
                          \n\
                          \n\
                          \n\
                          \n"

    def img_L2(self):
        return "\
                          \n\
                          \n\
                          \n\
                          \n\
             ___ ___ ____ \n\
      /|    /___/___/___/|\n\
     / |   /___/___/___/||\n\
    /  |  /___/___/__ /|/|\n\
   |   | |   |   |   | /||\n\
   | x2| |___|___|___|/|/|\n\
   \/  | |   |   |   | /||\n\
      /  |___|___|___|/|/ \n\
     /   |   |   |   | /  \n\
    /    |___|___|___|/   \n\
                          \n\
                          \n\
                          \n\
                          \n"

    def img_Li(self):
        return "\
                          \n\
                          \n\
                          \n\
                          \n\
             ___ ___ ____ \n\
      /|    /___/___/___/|\n\
     / |   /___/___/___/||\n\
    /  |  /___/___/__ /|/|\n\
   |   \/|   |   |   | /||\n\
   |     |___|___|___|/|/|\n\
   |     |   |   |   | /||\n\
   |  /  |___|___|___|/|/ \n\
   | /   |   |   |   | /  \n\
   |/    |___|___|___|/   \n\
                          \n\
                          \n\
                          \n\
                          \n"

    def img_U(self):
        return "\
             ____________ \n\
            /           / \n\
           /           \/ \n\
          /___________    \n\
             ___ ___ ____ \n\
            /___/___/___/|\n\
           /___/___/___/||\n\
          /___/___/__ /|/|\n\
         |   |   |   | /||\n\
         |___|___|___|/|/|\n\
         |   |   |   | /||\n\
         |___|___|___|/|/ \n\
         |   |   |   | /  \n\
         |___|___|___|/   \n\
                          \n\
                          \n\
                          \n\
                          \n"

    def img_U2(self):
        return "\
             ____________ \n\
            /           / \n\
           /    x2     \/ \n\
          /___________    \n\
             ___ ___ ____ \n\
            /___/___/___/|\n\
           /___/___/___/||\n\
          /___/___/__ /|/|\n\
         |   |   |   | /||\n\
         |___|___|___|/|/|\n\
         |   |   |   | /||\n\
         |___|___|___|/|/ \n\
         |   |   |   | /  \n\
         |___|___|___|/   \n\
                          \n\
                          \n\
                          \n\
                          \n"

    def img_Ui(self):
        return "\
             ____________ \n\
            /           / \n\
           \/          /  \n\
           ___________/   \n\
             ___ ___ ____ \n\
            /___/___/___/|\n\
           /___/___/___/||\n\
          /___/___/__ /|/|\n\
         |   |   |   | /||\n\
         |___|___|___|/|/|\n\
         |   |   |   | /||\n\
         |___|___|___|/|/ \n\
         |   |   |   | /  \n\
         |___|___|___|/   \n\
                          \n\
                          \n\
                          \n\
                          \n"

    def img_D(self):
        return "\
                           \n\
                           \n\
                           \n\
                           \n\
             ___ ___ ____  \n\
            /___/___/___/| \n\
           /___/___/___/|| \n\
          /___/___/__ /|/| \n\
         |   |   |   | /|| \n\
         |___|___|___|/|/| \n\
         |   |   |   | /|| \n\
         |___|___|___|/|/  \n\
         |   |   |   | /   \n\
         |___|___|___|/    \n\
            ____________   \n\
           /           /   \n\
          \/          /    \n\
          ___________/     \n"

    def img_D2(self):
        return "\
                           \n\
                           \n\
                           \n\
                           \n\
             ___ ___ ____  \n\
            /___/___/___/| \n\
           /___/___/___/|| \n\
          /___/___/__ /|/| \n\
         |   |   |   | /|| \n\
         |___|___|___|/|/| \n\
         |   |   |   | /|| \n\
         |___|___|___|/|/  \n\
         |   |   |   | /   \n\
         |___|___|___|/    \n\
            ____________   \n\
           /           /   \n\
          \/   x2     /    \n\
          ___________/     \n"

    def img_Di(self):
        return "\
                           \n\
                           \n\
                           \n\
                           \n\
             ___ ___ ____  \n\
            /___/___/___/| \n\
           /___/___/___/|| \n\
          /___/___/__ /|/| \n\
         |   |   |   | /|| \n\
         |___|___|___|/|/| \n\
         |   |   |   | /|| \n\
         |___|___|___|/|/  \n\
         |   |   |   | /   \n\
         |___|___|___|/    \n\
            ____________   \n\
           /           /   \n\
          /           \/   \n\
         /___________      \n"

    def img_R(self):
        return "\
                                 \n\
                                 \n\
                                 \n\
                                 \n\
             ___ ___ ____        \n\
            /___/___/___/|    /| \n\
           /___/___/___/||   / | \n\
          /___/___/__ /|/|  /  | \n\
         |   |   |   | /|| |   | \n\
         |___|___|___|/|/| |   \/\n\
         |   |   |   | /|| |     \n\
         |___|___|___|/|/  |  /  \n\
         |   |   |   | /   | /   \n\
         |___|___|___|/    |/    \n\
                                 \n\
                                 \n\
                                 \n\
                                 \n"

    def img_R2(self):
        return "\
                                 \n\
                                 \n\
                                 \n\
                                 \n\
             ___ ___ ____        \n\
            /___/___/___/|    /| \n\
           /___/___/___/||   / | \n\
          /___/___/__ /|/|  /  | \n\
         |   |   |   | /|| |   | \n\
         |___|___|___|/|/| |   \/\n\
         |   |   |   | /|| | x2  \n\
         |___|___|___|/|/  |  /  \n\
         |   |   |   | /   | /   \n\
         |___|___|___|/    |/    \n\
                                 \n\
                                 \n\
                                 \n\
                                 \n"

    def img_Ri(self):
        return "\
                                 \n\
                                 \n\
                                 \n\
                                 \n\
             ___ ___ ____        \n\
            /___/___/___/|     /|\n\
           /___/___/___/||    / |\n\
          /___/___/__ /|/|   /  |\n\
         |   |   |   | /||  |   |\n\
         |___|___|___|/|/|  |   |\n\
         |   |   |   | /||  |   |\n\
         |___|___|___|/|/   \/ / \n\
         |   |   |   | /      /  \n\
         |___|___|___|/      /   \n\
                                 \n\
                                 \n\
                                 \n\
                                 \n"
        return imgStr

Moves = AffichageMoves()

def aideMouvements(c, mouv):
    """
    aideMouvements

    Appose une représentation ASCII du mouvement `m` effectué
    sur le cube `c`

    :Args:
        c       {Cube}      Le cube à afficher
        mouv    {String}    Le mouvement effectué sur le cube

    :Return:
        {String}
    """

    #L'image ASCII
    methodToCall = getattr(Moves, 'img_' + mouv)
    imgRot = methodToCall()

    cube = c.__str__()

    cubeSplit = cube.split("\n")
    imgSplit  = imgRot.split("\n")

    sizeCube = len(cubeSplit)
    sizeImg = len(imgSplit)

    strImg = ""
    i = 0
    cptCube = 0

    while i < sizeImg:
        if i <=14 and i > 5:
            if cptCube == 6 or cptCube == 7 or cptCube ==8:
                spacesManquant = 10 * ' '
            else:
                spacesManquant = ''
            strImg += cubeSplit[cptCube]
            strImg += spacesManquant
            strImg += imgSplit[i] + "\n"
            cptCube += 1
        else:
            spacesManquant = 39 * ' '
            strImg += spacesManquant
            strImg += imgSplit[i] + "\n"
        i += 1

    return strImg
